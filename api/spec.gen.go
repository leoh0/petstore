// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.8.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
